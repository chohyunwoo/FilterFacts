name: Deploy AI Server to NKS

on:
  push:
    branches:
      - ai

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # ‚úÖ 1. ÏΩîÎìú Ï≤¥ÌÅ¨ÏïÑÏõÉ
      - name: Checkout source
        uses: actions/checkout@v4

      # ‚úÖ 2. AI ÏÑúÎ≤Ñ Docker Ïù¥ÎØ∏ÏßÄ ÎπåÎìú & Push
      - name: Build and Push AI Server image
        run: |
          IMAGE=contest-cluster54-registry.kr.ncr.ntruss.com/ai-server
          TAG=$(date +'%Y%m%d-%H%M%S')
          echo "TAG=$TAG" >> $GITHUB_ENV

          echo "${{ secrets.NCP_REGISTRY_PASSWORD }}" | docker login \
            -u "${{ secrets.NCP_REGISTRY_USERNAME }}" \
            --password-stdin contest-cluster54-registry.kr.ncr.ntruss.com

          docker build -t $IMAGE:$TAG -t $IMAGE:latest -f ./Dockerfile .
          docker push $IMAGE:$TAG
          docker push $IMAGE:latest

      # ‚úÖ 3. kubeconfig Î≥µÏõê
      - name: Restore kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.NKS_KUBECONFIG1 }}" | base64 --decode > $HOME/.kube/config
          chmod 600 $HOME/.kube/config

      # ‚úÖ 4. Naver Cloud IAM Authenticator ÏÑ§Ïπò (‚ùóÏ§ëÏöî)
      - name: Install Naver Cloud IAM Authenticator
        run: |
          ARCH=$(uname -m)
          if [ "$ARCH" = "x86_64" ]; then
            FILE_URL="https://github.com/NaverCloudPlatform/ncp-iam-authenticator/releases/download/v1.1.1/ncp-iam-authenticator_linux_amd64"
          else
            FILE_URL="https://github.com/NaverCloudPlatform/ncp-iam-authenticator/releases/download/v1.1.1/ncp-iam-authenticator_linux_arm64"
          fi

          curl -fL -o ncp-iam-authenticator ${FILE_URL}
          chmod +x ncp-iam-authenticator
          sudo mv ncp-iam-authenticator /usr/local/bin/

      # ‚úÖ 5. AI ÏÑúÎ≤Ñ Î∞∞Ìè¨
      - name: Deploy AI Server
        run: |
          echo "üß† Deploying ai-server with image tag: $TAG"
          kubectl set image deployment/ai-server \
            ai-server=contest-cluster54-registry.kr.ncr.ntruss.com/ai-server:$TAG \
            --record
          kubectl rollout status deployment/ai-server --timeout=200s
