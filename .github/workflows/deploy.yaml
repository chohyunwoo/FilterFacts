name: Deploy FilterFacts to Naver Cloud Kubernetes (Token-based)

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build with Gradle
        run: |
          chmod +x gradlew
          ./gradlew clean build -x test

      - name: Build and Push Docker image
        id: build
        run: |
          IMAGE=contest-cluster54-registry.kr.ncr.ntruss.com/filterfacts-backend
          TAG=$(date +'%Y%m%d-%H%M%S')
          echo "TAG=$TAG" >> $GITHUB_ENV
          echo "🚀 Building image with tag: $TAG"

          echo "${{ secrets.NCP_REGISTRY_PASSWORD }}" | docker login \
            -u "${{ secrets.NCP_REGISTRY_USERNAME }}" \
            --password-stdin contest-cluster54-registry.kr.ncr.ntruss.com

          docker build -t $IMAGE:$TAG -t $IMAGE:latest .
          docker push $IMAGE:$TAG
          docker push $IMAGE:latest
     # ✅ PostgreSQL + pgvector 이미지 푸시 (수동 1회용)
      - name: Push PostgreSQL + pgvector image
        run: |
          IMAGE=contest-cluster54-registry.kr.ncr.ntruss.com/filterfacts-postgres-pgvector
          docker build -t $IMAGE:latest -f Dockerfile.pgvector .
          docker push $IMAGE:latest

      - name: Install Naver Cloud IAM Authenticator
        run: |
          ARCH=$(uname -m)
          if [ "$ARCH" = "x86_64" ]; then
            FILE_URL="https://github.com/NaverCloudPlatform/ncp-iam-authenticator/releases/download/v1.1.1/ncp-iam-authenticator_linux_amd64"
          else
            FILE_URL="https://github.com/NaverCloudPlatform/ncp-iam-authenticator/releases/download/v1.1.1/ncp-iam-authenticator_linux_arm64"
          fi

          curl -fL -o ncp-iam-authenticator ${FILE_URL}
          chmod +x ncp-iam-authenticator
          sudo mv ncp-iam-authenticator /usr/local/bin/

      - name: Restore Naver Cloud config
        run: |
          mkdir -p $HOME/.ncloud
          echo "${{ secrets.NCP_CONFIG }}" | base64 --decode > $HOME/.ncloud/configure
          chmod 600 $HOME/.ncloud/configure

      - name: Restore kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.NKS_KUBECONFIG1 }}" | base64 --decode > $HOME/.kube/config
          chmod 600 $HOME/.kube/config

      - name: Apply Deployment YAML (update replicas)
        run: |
          echo "📌 Applying updated deploy.yaml..."
          kubectl apply -f deploy.yaml

      - name: Deploy Backend with Updated Image Tag
        run: |
          echo "☕ Deploying backend with tag: $TAG"
          kubectl set image deployment/f-f-backend \
            f-f-backend=contest-cluster54-registry.kr.ncr.ntruss.com/filterfacts-backend:$TAG \
            --record
          kubectl rollout status deployment/f-f-backend --timeout=200s

      - name: ✅ Verify Deployment Status
        run: |
          kubectl get pods -o wide
          kubectl get svc
