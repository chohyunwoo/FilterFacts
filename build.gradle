plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.4'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    implementation 'com.mysql:mysql-connector-j:8.0.33'


    implementation 'org.springframework.boot:spring-boot-starter-webflux'  // WebClient
    runtimeOnly 'org.postgresql:postgresql'


    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.15.3'
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.0'
    implementation 'org.glassfish.jaxb:jaxb-runtime:4.0.3'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml'


    // 외부 AI 서버 REST 호출
    implementation 'org.springframework.boot:spring-boot-starter-webflux' // WebClient
}

tasks.named('test') {
    useJUnitPlatform()
}
